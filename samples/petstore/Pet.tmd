####
#### ATTENTION CE FICHIER EST GENERE AUTOMATIQUEMENT !
####

---
module: Petstore
tags:
  - petstore
uses:
  - ../../../petstore/Model

---
endpoint:
  name: addPet
  method: POST
  route: pet
  description: "Add a new pet to the store"
  params:
    - composition: Pet
      name: Body
      comment: "Body"
  returns:
    composition: Pet
    name: Result
    comment: "Result"
---
endpoint:
  name: deletePet
  method: DELETE
  route: pet/{petId}
  description: "Deletes a pet"
  params:
    - name: Api_key
      domain: DO_LIBELLE
      comment: ""
    - name: PetId
      domain: DO_ID
      comment: "Pet id to delete"
---
endpoint:
  name: findPetsByStatus
  method: GET
  route: pet/findByStatus
  description: "Finds Pets by status"
  params:
    - name: Status
      domain: DO_LIBELLE
      comment: "Status values that need to be considered for filter"
  returns:
    composition: Pet
    name: Result
    domain: DO_LIST
    comment: "Result"
---
endpoint:
  name: findPetsByTags
  method: GET
  route: pet/findByTags
  description: "Finds Pets by tags"
  params:
    - name: Tags
      domain: DO_LIBELLE
      comment: "Tags to filter by"
  returns:
    composition: Pet
    name: Result
    domain: DO_LIST
    comment: "Result"
---
endpoint:
  name: getPetById
  method: GET
  route: pet/{petId}
  description: "Find pet by ID"
  params:
    - name: PetId
      domain: DO_ID
      comment: "ID of pet to return"
  returns:
    composition: Pet
    name: Result
    comment: "Result"
---
endpoint:
  name: updatePet
  method: PUT
  route: pet
  description: "Update an existing pet"
  params:
    - composition: Pet
      name: Body
      comment: "Body"
  returns:
    composition: Pet
    name: Result
    comment: "Result"
---
endpoint:
  name: updatePetWithForm
  method: POST
  route: pet/{petId}
  description: "Updates a pet in the store with form data"
  params:
    - name: PetId
      domain: DO_ID
      comment: "ID of pet that needs to be updated"
    - name: Name
      domain: DO_LIBELLE
      comment: "Name of pet that needs to be updated"
    - name: Status
      domain: DO_LIBELLE
      comment: "Status of pet that needs to be updated"
---
endpoint:
  name: uploadFile
  method: POST
  route: pet/{petId}/uploadImage
  description: "uploads an image"
  params:
    - name: Body
      domain: DO_FILE
      required: true
      comment: "Body"
    - name: PetId
      domain: DO_ID
      comment: "ID of pet to update"
    - name: AdditionalMetadata
      domain: DO_LIBELLE
      comment: "Additional Metadata"
  returns:
    composition: ApiResponse
    name: Result
    comment: "Result"
